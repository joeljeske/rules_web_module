load("//bazel/js:index.bzl", "link_web_modules", "web_module_app_server", "web_module_file_loader", "web_module_library", "web_module_test")
load("//bazel/js:constants.bzl", "DEPS", "SRCS_EXCLUDE_PATTERNS", "SRCS_PATTERNS", "TEST_DEPS", "TEST_SRCS_PATTERNS")

# Loading static assets into the bundle (assets could be pre-processed as needed)
web_module_file_loader(
    name = "static-assets",
    assets = glob(["assets/*"]),
    module_name = "static",
)

# The top-level "library" that is capable of running in the browser
web_module_library(
    name = "main",
    srcs = glob(
        SRCS_PATTERNS,
        exclude = SRCS_EXCLUDE_PATTERNS,
    ),
    deps = DEPS + [
        ":static-assets",
        "//npm:react",
        "//npm:react-router-dom",
        "//npm:react-dom",
        "//example/packages/menu",
        "//example/routes/about",
    ],
)

# :test runs all the tests for the current package only
web_module_test(
    name = "test",
    srcs = glob(TEST_SRCS_PATTERNS),
    data = [],
    # TODO
    # Tests fail due to https://github.com/bazelbuild/rules_nodejs/pull/3356
    expected_exit_code = 1,
    test_env = "jsdom",
    deps = TEST_DEPS + [
        ":main",
    ],
)

link_web_modules(
    name = "dev_build",
    out = "dev.importmap.json",
    js_env = {
        "JS_BUNDLE_FORMAT": "systemjs",
        "NODE_ENV": "development",
    },
    deps = [
        ":main",
        "//bazel/js/systemjs",
        "//npm:react/jsx-runtime",
    ],
)

web_module_app_server(
    name = "serve",
    data = [":dev_build"],
    importmap = "dev.importmap.json",
    index = "index.html",
    loaders = ["systemjs"],
)

link_web_modules(
    name = "prod_build",
    out = "prod.importmap.json",
    js_env = {
        "JS_BUNDLE_FORMAT": "systemjs",
        "NODE_ENV": "production",
    },
    deps = [
        ":main",
        "//bazel/js/systemjs",
        "//npm:react/jsx-runtime",
    ],
)

# This is far from a prod server, just showing how prod assets look
web_module_app_server(
    name = "serve.prod",
    data = [":prod_build"],
    importmap = "prod.importmap.json",
    index = "index.html",
    loaders = ["systemjs"],
)
