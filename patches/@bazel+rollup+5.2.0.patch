diff --git a/node_modules/@bazel/rollup/rollup_bundle.bzl b/node_modules/@bazel/rollup/rollup_bundle.bzl
index 9f52eff..8dc7c13 100755
--- a/node_modules/@bazel/rollup/rollup_bundle.bzl
+++ b/node_modules/@bazel/rollup/rollup_bundle.bzl
@@ -99,7 +99,7 @@ Either this attribute or `entry_point` must be specified, but not both.
 - `system`: Native format of the SystemJS loader
 """,
         values = ["amd", "cjs", "esm", "iife", "umd", "system"],
-        default = "esm",
+        # default = "esm",
     ),
     "link_workspace_root": attr.bool(
         doc = """Link the workspace root to the bin_dir to support absolute requires like 'my_wksp/path/to/file'.
@@ -120,7 +120,6 @@ Otherwise, the outputs are assumed to be a single file.
         executable = True,
         cfg = "exec",
         default = (
-            
             "//rollup/bin:rollup"
         ),
     ),
@@ -163,6 +162,7 @@ When enabled, this rule invokes the "rollup_worker_bin"
 worker aware binary rather than "rollup_bin".""",
         default = False,
     ),
+    "env": attr.string_dict(),
 }
 
 def _desugar_entry_point_names(name, entry_point, entry_points):
@@ -295,7 +295,8 @@ def _rollup_bundle(ctx):
         args.add(entry_points[0][0])
         args.add_all(["--output.file", outputs[0].path])
 
-    args.add_all(["--format", ctx.attr.format])
+    if ctx.attr.format:
+        args.add_all(["--format", ctx.attr.format])
 
     if ctx.attr.silent:
         # Run the rollup binary with the --silent flag
@@ -341,7 +342,7 @@ def _rollup_bundle(ctx):
         arguments = [args],
         mnemonic = "Rollup",
         execution_requirements = execution_requirements,
-        env = {"COMPILATION_MODE": ctx.var["COMPILATION_MODE"]},
+        env = dict(COMPILATION_MODE = ctx.var["COMPILATION_MODE"], **ctx.attr.env),
         link_workspace_root = ctx.attr.link_workspace_root,
     )
 
